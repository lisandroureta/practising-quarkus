####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the container image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/first-step-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8082:8082 quarkus/first-step-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8082 5050
#
# Then run the container using :
#
# docker run -i --rm -p 8082:8082 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" quarkus/first-step-jvm
#
###
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.10

# Instalamos Java 17
RUN microdnf install -y java-17-openjdk-headless ca-certificates curl \
    && microdnf clean all \
    && mkdir -p /deployments \
    && chown 1001:root /deployments \
    && chmod g+rwX /deployments

# Para que Quarkus escuche en todas las interfaces dentro del contenedor
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"

WORKDIR /deployments

# Copiamos el layout fast-jar que genera Quarkus en JVM
COPY target/quarkus-app/lib/ /deployments/lib/
COPY target/quarkus-app/*.jar /deployments/
COPY target/quarkus-app/app/ /deployments/app/
COPY target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8082
USER 1001
ENTRYPOINT ["java","-jar","/deployments/quarkus-run.jar"]
